version: "3"

services:
  nginx:
    image: nginx:1.21.1
    container_name: budget_counter_nginx
    volumes:
      - ./nginx:/etc/nginx/conf.d
    ports:
      -  80:80
    depends_on:
      - server
    networks:
      - default
    restart: on-failure

  db:
    build:
      context: images/
      dockerfile: db.dockerfile
    container_name: budget_counter_db
    volumes:
      - server-db-data:/var/lib/postgresql/data/pgdata
    env_file:
      - .env
    networks:
      - default
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
      - POSTGRES_DB=$DB_NAME
      - POSTGRES_USER=$DB_USER
      - POSTGRES_PASSWORD=$DB_PASSWORD

  server:
    build:
      context:  .
      dockerfile: images/server.dockerfile
    container_name: budget_counter_backend
    volumes:
       - ./backend/:/backend/
       - tmp:/tmp
       - server-db-data:/var/lib/postgresql/data/pgdata
    command: ./scripts/start-reload.sh
    env_file:
      - .env
    depends_on:
      - db
    networks:
      - default


  adminer:
    image: adminer:latest
    container_name: budget_counter_adminer
    env_file:
      - .env
    networks:
      - default
    depends_on:
      - db
    ports:
      - 8080:8080


  redis:
    image: redis:latest
    container_name: budget_counter_redis
    command: redis-server --requirepass $REDIS_PASSWORD
    depends_on:
      - db
      - server
    env_file:
      - .env
    networks:
      - default
    ports:
      - 6379:6379


  queue:
    image: rabbitmq:latest
    container_name: budget_counter_queue
    networks:
      - default
    env_file:
      - .env
    ports:
      - 5673:5673

  worker:
    build:
      context: .
      dockerfile: ./images/worker.dockerfile
      args:
        INSTALL_DEV: ${INSTALL_DEV-true}
    container_name: budget_counter_worker
    volumes:
      - ./backend/:/backend/
      - tmp:/tmp
    networks:
      - default
    depends_on:
      - queue
      - db
    env_file:
      - .env


volumes:
  server-db-data:
  tmp:

networks:
  default:
